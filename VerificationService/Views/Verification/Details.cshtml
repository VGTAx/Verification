@model VerificationViewModel

@{
  ViewData["Title"] = "Информация о проверке";
  var indexViewUrl = ViewBag.IndexViewUrl as string;
  if (!String.IsNullOrEmpty(indexViewUrl))
  {
    indexViewUrl = indexViewUrl.Replace("%2F", "/");
  }
  var editUrl = Url.Action("Edit", new { id = Model.Id, returnUrl = indexViewUrl });
  var deleteUrl = Url.Action("Delete", new { id = Model.Id, returnUrl = indexViewUrl });
}
<h1>@ViewData["Title"]</h1>

@await Html.PartialAsync("Edit")
<div>
  <hr />
  <dl class="row">
    <dt class="row-sm-4">
      @Html.DisplayNameFor(model => model.BusinessEntity)
    </dt>
    <dd class="col-sm-10">
      @Html.DisplayFor(model => model.BusinessEntity)
    </dd>
    <dt class="col-sm-4">
      @Html.DisplayNameFor(model => model.Organization)
    </dt>
    <dd class="col-sm-10">
      @Html.DisplayFor(model => model.Organization)
    </dd>
    <dt class="col-sm-4">
      @Html.DisplayNameFor(model => model.BeginPeriod)
    </dt>
    <dd class="col-sm-10">
      @Html.DisplayFor(model => model.BeginPeriod)
    </dd>
    <dt class="col-sm-4">
      @Html.DisplayNameFor(model => model.EndPeriod)
    </dt>
    <dd class="col-sm-10">
      @Html.DisplayFor(model => model.EndPeriod)
    </dd>
    <dt class="col-sm-4">
      @Html.DisplayNameFor(model => model.Duration)
    </dt>
    <dd class="col-sm-10">
      @Html.DisplayFor(model => model.Duration)
    </dd>
  </dl>

</div>
<div>
  <a href="@editUrl" class="btn btn-info btn-sm fw-bold" data-bs-toggle="modal" data-bs-target="#modalEditVerification" data-target="editForm">Изменить</a> |   
  <a href="@deleteUrl" class="btn btn-danger btn-sm fw-bold">Удалить</a> |
  <a href="@indexViewUrl" class="btn btn-success btn-sm fw-bold">Назад</a>
</div>

<script src="~/js/editObjectForm.js"></script> 